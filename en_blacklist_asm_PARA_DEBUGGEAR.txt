; uint8_t en_blacklist(char* comercio, char** lista_comercios, uint8_t n)
; RDI -> comercio . RSI -> lista_comercios . RDX -> n
en_blacklist_asm:
	push rbp
	mov rbp, rsp
	push r12
	push r13
	push r14

	mov r12, rdi		; r12 <- comercio
	mov r13, rsi		; r13 <- lista_comercios
	mov r14, rdx		; r14 <- n

	xor rcx, rcx

	.ciclo:
		cmp rcx, r14
		jge .finCiclo

		mov rsi, [r13]
		call strcmp			; rdi ya tiene a comercio (el primer parametro) 

		cmp rax, 0
		je .encontrado

		.proxIteracion:
		inc rcx
		add r13, SIZE_OF_POINTER
		jmp .ciclo
	
	.encontrado:
		mov rax, 1
	
	.finCiclo:
		mov rax, 0

	pop r14
	pop r13
	pop r12
	pop rbp
	ret


	---------------------

	 ARREGLAR ASI:

; uint8_t en_blacklist(char* comercio, char** lista_comercios, uint8_t n)
; RDI -> comercio . RSI -> lista_comercios . RDX -> n
en_blacklist_asm:
	push rbp
	mov rbp, rsp
	push r12
	push r13
	push r14

	mov r12, rdi		; r12 <- comercio
	mov r13, rsi		; r13 <- lista_comercios
	mov r14, rdx		; r14 <- n

	xor r15, r15

	.ciclo:
		cmp r15, r14
		jge .finCiclo

		mov rdi, r12
		mov rsi, [r13]
		call strcmp			

		cmp rax, 0
		je .encontrado

		.proxIteracion:
		inc r15
		add r13, SIZE_OF_POINTER
		jmp .ciclo
	
	.encontrado:
		mov rax, 1
	
	.finCiclo:
		mov rax, 0

	pop r14
	pop r13
	pop r12
	pop rbp
	ret


 _________ Y PREGUNTAR POR QUE NO FUNCIONA (falta el jmp a fin en el caso
 de .encontrado, para que saltee a finCiclo)